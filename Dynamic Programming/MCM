// C++ program using memoization
#include <bits/stdc++.h>
using namespace std;
int dp[101][101];

// Function for matrix chain multiplication
int MCM(int arr[], int i, int j)
{
	if (i >= j)
	{
		return 0;
	}
	if (dp[i][j] != -1)
	{
		return dp[i][j];
	}
	dp[i][j] = INT_MAX;
	for (int k = i; k < j; k++)
	{
		dp[i][j] = min(
			dp[i][j], MCM(arr, i, k)
					+ MCM(arr, k + 1, j)
					+ arr[i - 1] * arr[k] * arr[j]);
	}
	return dp[i][j];
}
int MCMOrder(int arr[], int n)
{
	int i = 1, j = n - 1;
	return MCM(arr, i, j);
}

// Driver Code
int main()
{
	int arr[] = { 1, 2, 3, 4 };
	int n = sizeof(arr) / sizeof(arr[0]);
	memset(dp, -1, sizeof dp);

	cout << MCM(arr, 1, n-1);
}

